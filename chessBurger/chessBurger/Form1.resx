<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>